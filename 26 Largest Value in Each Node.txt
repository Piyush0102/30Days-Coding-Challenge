#Largest Value in Each Node

class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right

def largest_values_per_level(root):
    if not root:
        return []

    result = []
    level_queue = [root]

    while level_queue:
        level_max = float('-inf')
        level_size = len(level_queue)

        for i in range(level_size):
            node = level_queue.pop(0)
            level_max = max(level_max, node.val)

            if node.left:
                level_queue.append(node.left)
            if node.right:
                level_queue.append(node.right)

        result.append(level_max)

    return result

root = TreeNode(1)
root.left = TreeNode(3)
root.right = TreeNode(2)
root.left.left = TreeNode(5)
root.left.right = TreeNode(3)
root.right.right = TreeNode(9)

print(largest_values_per_level(root))



OUTPUT:
[1, 3, 9]